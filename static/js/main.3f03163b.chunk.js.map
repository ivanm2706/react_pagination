{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getCurrentAmountPages","max","array","i","push","getVisibleAmountItems","itemsPerPage","currentPage","itemsLength","Infinity","start","end","Pagination","total","perPage","onPageChange","hendlerActivePage","e","currentTarget","id","className","classNames","disabled","href","onClick","Math","ceil","map","page","active","items","from","to","numbers","n","getNumbers","App","useState","setItemsPerPage","setCurrentPage","slice","visibleItems","setVisibleItems","visibleAmountItems","setVisibleAmountItems","length","value","onChange","event","amountItems","htmlFor","pageNumber","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f03163b.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getCurrentAmountPages(max: number) {\n  const array = [];\n\n  for (let i = 1; i <= max; i += 1) {\n    array.push(i);\n  }\n\n  return array;\n}\n\nexport function getVisibleAmountItems(\n  itemsPerPage: number,\n  currentPage: number,\n  itemsLength = Infinity,\n) {\n  return {\n    start: itemsPerPage * currentPage - itemsPerPage + 1,\n    end: itemsPerPage * currentPage > itemsLength\n      ? itemsLength\n      : itemsPerPage * currentPage,\n  };\n}\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { getCurrentAmountPages } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const hendlerPrevPage = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  const hendlerActivePage = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    onPageChange(+e.currentTarget.id);\n  };\n\n  const hendlerNextPage = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item', { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={hendlerPrevPage}\n        >\n          «\n        </a>\n      </li>\n      {getCurrentAmountPages(Math.ceil(total / perPage)).map(page => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: currentPage === page },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            id={`${page}`}\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={hendlerActivePage}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item', { disabled: Math.ceil(total / perPage) === currentPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"true\"\n          onClick={hendlerNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\nimport { getNumbers, getVisibleAmountItems } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [visibleItems, setVisibleItems] = useState(items\n    .slice(0, itemsPerPage));\n  const [\n    visibleAmountItems,\n    setVisibleAmountItems,\n  ] = useState(() => getVisibleAmountItems(10, 1));\n\n  const changePage = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n    setVisibleAmountItems(getVisibleAmountItems(\n      itemsPerPage,\n      pageNumber,\n      items.length,\n    ));\n\n    setVisibleItems(items.slice(\n      itemsPerPage * pageNumber - itemsPerPage,\n      itemsPerPage * pageNumber > items.length\n        ? items.length\n        : itemsPerPage * pageNumber,\n    ));\n  };\n\n  const hendlerItemPerPage = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    const amountItems = +event.currentTarget.value;\n    const initialPage = 1;\n\n    setCurrentPage(initialPage);\n    setItemsPerPage(amountItems);\n    setVisibleItems(items.slice(\n      initialPage * amountItems - amountItems,\n      amountItems,\n    ));\n    setVisibleAmountItems(getVisibleAmountItems(amountItems, initialPage));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} `}\n        {`(items ${visibleAmountItems.start} - ${visibleAmountItems.end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={hendlerItemPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={changePage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}