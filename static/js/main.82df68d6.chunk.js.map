{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getCurrentAmountPages","max","array","i","push","Pagination","total","perPage","currentPage","onPageChange","className","classNames","disabled","href","onClick","Math","ceil","map","page","active","items","from","to","numbers","n","getNumbers","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","start","end","visibleAmountItems","setVisibleAmountItems","slice","visibleItems","setVisibleItems","length","id","value","onChange","event","amountItems","currentTarget","htmlFor","pageNumber","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82df68d6.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getCurrentAmountPages(max: number) {\n  const array = [];\n\n  for (let i = 1; i <= max; i += 1) {\n    array.push(i);\n  }\n\n  return array;\n}\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { getCurrentAmountPages } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => (\n  <ul className=\"pagination\">\n    <li className={classNames(\n      'page-item', { disabled: currentPage === 1 },\n    )}\n    >\n      <a\n        data-cy=\"prevLink\"\n        className=\"page-link\"\n        href=\"#prev\"\n        aria-disabled=\"true\"\n        onClick={() => onPageChange(currentPage - 1)}\n      >\n        «\n      </a>\n    </li>\n    {getCurrentAmountPages(Math.ceil(total / perPage)).map(page => (\n      <li\n        className={classNames(\n          'page-item',\n          { active: currentPage === page },\n        )}\n      >\n        <a\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          href={`#${page}`}\n          onClick={() => onPageChange(page)}\n        >\n          {page}\n        </a>\n      </li>\n    ))}\n\n    <li className={classNames(\n      'page-item', { disabled: Math.ceil(total / perPage) === currentPage },\n    )}\n    >\n      <a\n        data-cy=\"nextLink\"\n        className=\"page-link\"\n        href=\"#next\"\n        aria-disabled=\"true\"\n        onClick={() => onPageChange(currentPage + 1)}\n      >\n        »\n      </a>\n    </li>\n  </ul>\n);\n","import React, { useState } from 'react';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [visibleAmountItems, setVisibleAmountItems] = useState({\n    start: itemsPerPage * currentPage - itemsPerPage + 1,\n    end: itemsPerPage * currentPage,\n  });\n  const [visibleItems, setVisibleItems] = useState(items\n    .slice(0, itemsPerPage));\n\n  const changePage = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n    setVisibleAmountItems({\n      start: itemsPerPage * pageNumber - itemsPerPage + 1,\n      end: itemsPerPage * pageNumber > items.length\n        ? items.length\n        : itemsPerPage * pageNumber,\n    });\n    setVisibleItems(items.slice(\n      itemsPerPage * pageNumber - itemsPerPage,\n      itemsPerPage * pageNumber > items.length\n        ? items.length\n        : itemsPerPage * pageNumber,\n    ));\n  };\n\n  const hendlerItemPerPage = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    const amountItems = +event.currentTarget.value;\n    const initialPage = 1;\n\n    setCurrentPage(initialPage);\n    setItemsPerPage(amountItems);\n    setVisibleItems(items.slice(\n      initialPage * amountItems - amountItems,\n      amountItems,\n    ));\n    setVisibleAmountItems({\n      start: amountItems * initialPage - amountItems + 1,\n      end: amountItems * initialPage,\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} `}\n        {`(items ${visibleAmountItems.start} - ${visibleAmountItems.end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={hendlerItemPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={changePage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}